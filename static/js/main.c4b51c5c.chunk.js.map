{"version":3,"sources":["components/Header.js","components/ReducerComponent.js","components/Story.js","utils/constants.js","utils/apis.js","hooks/dataFetcher.js","components/ShowStories.js","components/HomePage.js","components/PageNotFound.js","router/AppRouter.js","index.js"],"names":["Header","Fragment","className","to","activeClassName","Link","url","title","href","target","rel","Story","story","id","by","kids","time","Date","toLocaleDateString","hour","minute","length","BASE_API_URL","getStory","a","axios","get","Error","getStories","type","storyIds","data","Promise","all","slice","map","stories","UseDataFetcher","useState","setStories","errorMsg","setErrorMsg","isLoading","setIsLoading","useEffect","then","catch","error","message","showStories","props","match","params","HomePage","PageNotFound","AppRouter","path","component","exact","ShowStories","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4b51c5c.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <React.Fragment>\n      <h1>Hacker News Clone</h1>\n      <div className=\"nav-link\">\n        <NavLink to=\"/top\" activeClassName=\"active\">\n          Top Stories\n        </NavLink>\n        <NavLink to=\"/new\" activeClassName=\"active\">\n          Latest Stories\n        </NavLink>\n        <NavLink to=\"/best\" activeClassName=\"active\">\n          Best Stories\n        </NavLink>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Header;","import React, {useReducer} from 'react'\n\nfunction reducer(state, action){\n    switch(action.type){\n        case 'increment':\n            return state + 1;\n        case 'decrement':\n            return state - 1;\n        default:\n            return state;\n    }\n}\n\nconst MyReducerApp = () => {\n    const [count, dispatch] = useReducer(reducer, 0);\n    return (\n        <div>\n            <div>Count: {count}</div>\n            <button onClick={() => dispatch({ type:\"increment\" })}>increment</button>\n            <button onClick={() => dispatch({ type:\"decrement\" })}>decrement</button>\n        </div>\n    )\n}\n\nexport default MyReducerApp;","import React from 'react';\n\nconst Link = ({ url, title }) => (\n  <a href={url} target=\"_blank\" rel=\"noreferrer\">\n    {title}\n  </a>\n);\n\nconst Story = ({ story: { id, by, title, kids, time, url } }) => {\n  return (\n    <div className=\"story\">\n      <div className=\"story-title\">\n        <Link url={url} title={title} />\n      </div>\n      <div className=\"story-info\">\n        <span>\n          by{' '}\n          <Link url={`https://news.ycombinator.com/user?id=${by}`} title={by} />\n        </span>\n        |\n        <span>\n          {new Date(time * 1000).toLocaleDateString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric'\n          })}\n        </span>\n        |\n        <span>\n          <Link\n            url={`https://news.ycombinator.com/item?id=${id}`}\n            title={`${kids && kids.length > 0 ? kids.length : 0} comments`}\n          />\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default Story;","export const BASE_API_URL = 'https://hacker-news.firebaseio.com/v0';\n","import axios from 'axios';\nimport { BASE_API_URL } from './constants';\n\nconst getStory = async (id) => {\n    try{\n        const story = await axios.get( `${BASE_API_URL}/item/${id}.json` );\n        return story;\n    } catch( error ){\n        throw new Error( 'Error while loading data. Try again later' );\n    }\n};\n\nexport const getStories = async ( type ) => {\n    try{\n        const { data: storyIds } = await axios.get( `${BASE_API_URL}/${type}stories.json` );\n        const stories = await Promise.all( storyIds.slice(0, 25).map(getStory) );\n        return stories;  \n    }catch( error ){\n        throw new Error( 'Error while loading data. Try again later' );\n    }\n}","import { useState, useEffect } from 'react';\nimport { getStories } from './../utils/apis';\n\nconst UseDataFetcher = ( type ) => {\n    const [ stories, setStories ] = useState([]);\n    const [ errorMsg, setErrorMsg ] = useState('');\n    const [ isLoading, setIsLoading ] = useState(false);\n    \n    useEffect( () => {\n        setIsLoading(true);\n        getStories(type).then( (stories) => {\n            setStories(stories);\n            setErrorMsg('');\n            setIsLoading(false);\n        } ).catch( (error) => {\n            setErrorMsg(error.message);\n            setIsLoading(false);\n        } )\n    }, [type] );\n    return { isLoading, errorMsg, stories }\n}\n\nexport default UseDataFetcher;","import React from 'react'\nimport Story from './Story';\nimport UseDataFetcher from '../hooks/dataFetcher';\n\nconst showStories = ( props ) => {\n    const { type } = props.match.params;\n    const { isLoading, errorMsg, stories } = UseDataFetcher(type);\n    \n    return (\n        <React.Fragment>\n            {\n                isLoading ? <p>Loading </p> : (\n                    <React.Fragment>\n                        {\n                            stories.map( ( {data:story}) => (\n                                <Story key={story.id} story={story} />\n                                \n                            ) )\n                        }\n                    </React.Fragment>\n                )\n            }\n        </React.Fragment>\n    )\n}\n\nexport default showStories;","import React from 'react';\nimport MyReducerApp from './ReducerComponent'\nimport ShowStories from './ShowStories';\n\nconst HomePage = () => {\n    return <React.Fragment>\n        Home Page\n    </React.Fragment>\n}\n\nexport default HomePage;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst PageNotFound = () => {\n    return (\n        <p>\n            Page Not found. Go to <Link to=\"/\">Home</Link>\n        </p>\n    )\n}\n\nexport default PageNotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Header from '../components/Header';\nimport HomePage from '../components/HomePage';\nimport PageNotFound from '../components/PageNotFound';\nimport ShowStories from '../components/ShowStories';\n\nconst AppRouter = () => {\n    return (\n        <BrowserRouter>\n            <div className=\"container\">\n                <Header/>\n                <Switch>\n                    <Route path=\"/\" component={HomePage} exact={true} />\n                    <Route path=\"/:type\" component={ShowStories} />\n                    <Route component={PageNotFound} />\n                </Switch>\n            </div>\n        </BrowserRouter>\n    )\n}\n\nexport default AppRouter;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport AppRouter from './router/AppRouter';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  <AppRouter />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}