{"version":3,"sources":["components/Header.js","components/Story.js","utils/constants.js","utils/apis.js","hooks/dataFetcher.js","components/ShowStories.js","components/HomePage.js","components/PageNotFound.js","router/AppRouter.js","index.js"],"names":["SiteHeading","styled","div","NavWrapper","Header","Fragment","to","activeClassName","className","Link","url","title","href","target","rel","StoryWrapper","StoryTitle","StoryInfo","Story","story","id","by","kids","time","Date","toLocaleDateString","hour","minute","length","BASE_API_URL","getStory","a","axios","get","Error","getStories","type","storyIds","data","Promise","all","slice","map","stories","UseDataFetcher","useState","setStories","errorMsg","setErrorMsg","isLoading","setIsLoading","useEffect","then","catch","error","message","showStories","props","match","params","HomePage","PageNotFound","AppRouter","path","component","exact","ShowStories","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1a0d714.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst SiteHeading = styled.div`\n  text-align:center;\n  margin-top:30px;\n  color: #046B99;\n  a{\n    color: #046B99;\n  }\n`\n\nconst NavWrapper = styled.div`\n  text-align: center;\n  margin-bottom: 30px;\n  a{\n    font-weight:bold;\n    margin:0px 5px;\n    background: #f5f5f5;\n    padding: 10px 15px;\n    border-radius: 4px;\n    color: #046B99;\n  }\n  a.active{\n    color:white;\n    background: #046B99;\n  }\n`\n\nconst Header = () => {\n  return (\n    <React.Fragment>\n      <SiteHeading>\n        <NavLink to=\"/hacker-news-clone/\" activeClassName=\"active\">\n          <h1>Hacker News Clone</h1>\n        </NavLink>\n        \n      </SiteHeading>\n      <NavWrapper className=\"nav-link\">\n        <NavLink to=\"/top\" activeClassName=\"active\">\n          Top Stories\n        </NavLink>\n        <NavLink to=\"/new\" activeClassName=\"active\">\n          Latest Stories\n        </NavLink>\n        <NavLink to=\"/best\" activeClassName=\"active\">\n          Best Stories\n        </NavLink>\n      </NavWrapper>\n    </React.Fragment>\n  );\n};\n\nexport default Header;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Link = ({ url, title }) => (\n  <a href={url} target=\"_blank\" rel=\"noreferrer\">\n    {title}\n  </a>\n);\n\nconst StoryWrapper = styled.div`\n  border:solid 1px #eee;\n  background:#f5f5f5;\n  padding:15px;\n  margin-bottom:15px;\n  border-radius:4px;\n`\nconst StoryTitle = styled.div`\n    margin-bottom:5px;\n    a{\n        color: #046B99;\n        font-weight:500;\n    }\n`\nconst StoryInfo = styled.div`\n    color:#969696;\n    font-size: 14px;\n    span{\n        padding:10px;\n        text-transform: capitalize;\n        &:first-child{\n            padding-left:0;\n        }\n        a{\n            color:#969696;\n        }\n    }\n`\n\nconst Story = ({ story: { id, by, title, kids, time, url } }) => {\n  return (\n    <StoryWrapper className=\"story\">\n      <StoryTitle className=\"story-title\">\n        <Link url={url} title={title} />\n      </StoryTitle>\n      <StoryInfo className=\"story-info\">\n        <span>\n          by{' '}\n          <Link url={`https://news.ycombinator.com/user?id=${by}`} title={by} />\n        </span>\n        |\n        <span>\n          {new Date(time * 1000).toLocaleDateString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric'\n          })}\n        </span>\n        |\n        <span>\n          <Link\n            url={`https://news.ycombinator.com/item?id=${id}`}\n            title={`${kids && kids.length > 0 ? kids.length : 0} comments`}\n          />\n        </span>\n      </StoryInfo>\n    </StoryWrapper>\n  );\n};\n\nexport default Story;","export const BASE_API_URL = 'https://hacker-news.firebaseio.com/v0';\n","import axios from 'axios';\nimport { BASE_API_URL } from './constants';\n\nconst getStory = async (id) => {\n    try{\n        const story = await axios.get( `${BASE_API_URL}/item/${id}.json` );\n        return story;\n    } catch( error ){\n        throw new Error( 'Error while loading data. Try again later' );\n    }\n};\n\nexport const getStories = async ( type ) => {\n    try{\n        const { data: storyIds } = await axios.get( `${BASE_API_URL}/${type}stories.json` );\n        const stories = await Promise.all( storyIds.slice(0, 25).map(getStory) );\n        return stories;  \n    }catch( error ){\n        throw new Error( 'Error while loading data. Try again later' );\n    }\n}","import { useState, useEffect } from 'react';\nimport { getStories } from './../utils/apis';\n\nconst UseDataFetcher = ( type ) => {\n    const [ stories, setStories ] = useState([]);\n    const [ errorMsg, setErrorMsg ] = useState('');\n    const [ isLoading, setIsLoading ] = useState(false);\n    \n    useEffect( () => {\n        setIsLoading(true);\n        getStories(type).then( (stories) => {\n            setStories(stories);\n            setErrorMsg('');\n            setIsLoading(false);\n        } ).catch( (error) => {\n            setErrorMsg(error.message);\n            setIsLoading(false);\n        } )\n    }, [type] );\n    return { isLoading, errorMsg, stories }\n}\n\nexport default UseDataFetcher;","import React from 'react'\nimport Story from './Story';\nimport UseDataFetcher from '../hooks/dataFetcher';\n\nconst showStories = ( props ) => {\n    const { type } = props.match.params;\n    const { isLoading, errorMsg, stories } = UseDataFetcher(type);\n    \n    return (\n        <React.Fragment>\n            {\n                isLoading ? <p>Loading </p> : (\n                    <React.Fragment>\n                        {\n                            stories.map( ( {data:story}) => (\n                                <Story key={story.id} story={story} />\n                                \n                            ) )\n                        }\n                    </React.Fragment>\n                )\n            }\n        </React.Fragment>\n    )\n}\n\nexport default showStories;","import React from 'react';\nimport MyReducerApp from './ReducerComponent'\nimport ShowStories from './ShowStories';\n\nconst HomePage = () => {\n    return <React.Fragment>\n        Home Page\n    </React.Fragment>\n}\n\nexport default HomePage;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst PageNotFound = () => {\n    return (\n        <p>\n            Page Not found. Go to <Link to=\"/\">Home</Link>\n        </p>\n    )\n}\n\nexport default PageNotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Header from '../components/Header';\nimport HomePage from '../components/HomePage';\nimport PageNotFound from '../components/PageNotFound';\nimport ShowStories from '../components/ShowStories';\n\nconst AppRouter = () => {\n    return (\n        <BrowserRouter>\n            <div className=\"container\">\n                <Header/>\n                <Switch>\n                    <Route path=\"/\" component={HomePage} exact={true} />\n                    <Route path=\"/:type\" component={ShowStories} />\n                    <Route component={PageNotFound} />\n                </Switch>\n            </div>\n        </BrowserRouter>\n    )\n}\n\nexport default AppRouter;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport AppRouter from './router/AppRouter';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  <AppRouter />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}